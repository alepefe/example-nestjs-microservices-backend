---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  labels:
    app.kubernetes.io/name: user-service
    app.kubernetes.io/component: user-service
    app.kubernetes.io/part-of: xxx-backend
    app.kubernetes.io/version: "0.1.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: user-service
  revisionHistoryLimit: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: user-service
        app.kubernetes.io/component: user-service
        app.kubernetes.io/part-of: xxx-backend
        app.kubernetes.io/version: "0.1.0"
    spec:
      containers:
        - name: xxx-service
          image: xxx-backend-user-service
          imagePullPolicy: Always
          command: ["yarn", "start"]
          env:
            - name: TZ
              value: UTC
            - name: NODE_ENV
              value: 'development'
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            
            - name: USER_POSTGRES_HOST
              value: stackgres
            - name: USER_POSTGRES_PORT
              value: '5433'
            - name: USER_POSTGRES_USER
              value: app
            - name: USER_POSTGRES_PASSWORD
              value: Testtest1

            - name: USER_SMTP_HOST
              value: email-smtp.eu-west-3.amazonaws.com
            - name: USER_SMTP_PORT
              value: '465'
            - name: USER_SMTP_USER
              value: XXXXXXXXXX
            - name: USER_SMTP_PASSWORD
              value: XXXXXXXXXX

            - name: SENDER_EMAIL
              value: '"My App" <app@app.io>'